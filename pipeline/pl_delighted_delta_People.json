{
	"name": "pl_delighted_delta_People",
	"properties": {
		"activities": [
			{
				"name": "initial_endpoint",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "initial_var_delta_people_API_pagination",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "var_endpoint",
					"value": {
						"value": "@concat(pipeline().parameters.par_init_endpoint,'people.json/')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "loop_list_people_period",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "initial_endpoint",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('var_endpoint'), 'stop')\n",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "list_people",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(variables('var_endpoint'),'?'\n, 'since=', pipeline().parameters.par_p_start_date\n, '&until=', pipeline().parameters.par_p_until_date\n)",
									"type": "Expression"
								},
								"method": "GET",
								"authentication": {
									"type": "Basic",
									"username": {
										"value": "@pipeline().parameters.par_p_API_Key",
										"type": "Expression"
									},
									"password": {
										"type": "AzureKeyVaultSecret",
										"store": {
											"referenceName": "ls_fusedata_AzureKeyVault",
											"type": "LinkedServiceReference"
										},
										"secretName": "Delighted"
									}
								}
							}
						},
						{
							"name": "get_response_header",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "list_people",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "response_header",
								"value": {
									"value": "@activity('list_people').output.ADFWebActivityResponseHeaders.Link",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Stored_response_to_tb",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "list_people",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[udsp_insert_raw]",
								"storedProcedureParameters": {
									"r": {
										"value": {
											"value": "@activity('list_people').output.Response",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_azure_sqldb",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "update_endpoint",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "get_response_header",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_endpoint",
								"value": {
									"value": "@substring(variables('response_header'),1\n,sub(length(variables('response_header')),14)\n)\n ",
									"type": "Expression"
								}
							}
						},
						{
							"name": "reset_endpoint_to_stop_loop",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "get_response_header",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_endpoint",
								"value": "stop"
							}
						},
						{
							"name": "Stop looping",
							"type": "Wait",
							"dependsOn": [
								{
									"activity": "reset_endpoint_to_stop_loop",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						},
						{
							"name": "reset_endpoint",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "list_people",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_endpoint",
								"value": "stop"
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "initial_var_delta_people_API_pagination",
				"description": "initial_var_delta_people_API_pagination",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "lkp_last_success_load_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "var_delta_people_API_pagination",
					"value": {
						"value": "1",
						"type": "Expression"
					}
				}
			},
			{
				"name": "log_delta_people_success",
				"description": "log_delta_people_success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "loop_list_people_period",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[land].[udsp_logpipeline]",
					"storedProcedureParameters": {
						"adf_name": {
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							},
							"type": "String"
						},
						"pl_category": {
							"value": "people",
							"type": "String"
						},
						"pl_load_start_date": {
							"value": "",
							"type": "DateTime"
						},
						"pl_load_type": {
							"value": "delta",
							"type": "String"
						},
						"pl_load_until_date": {
							"value": {
								"value": "@formatDateTime(convertFromUtc(utcNow(), 'Eastern Standard Time'),\n'yyyy-MM-dd'\n)",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"pl_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pl_status": {
							"value": "1",
							"type": "Boolean"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_azure_sqldb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "log_delta_people_failed",
				"description": "log_delta_people_failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "loop_list_people_period",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[land].[udsp_logpipeline]",
					"storedProcedureParameters": {
						"adf_name": {
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							},
							"type": "String"
						},
						"pl_category": {
							"value": "people",
							"type": "String"
						},
						"pl_load_start_date": {
							"type": "DateTime"
						},
						"pl_load_type": {
							"value": "delta",
							"type": "String"
						},
						"pl_load_until_date": {
							"value": {
								"value": "@formatDateTime(convertFromUtc(utcNow(),'Eastern Standard Time'),'yyyy-MM-dd')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"pl_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pl_status": {
							"value": "0",
							"type": "Boolean"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_azure_sqldb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "lkp_last_success_load_date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT \n        [pl_log_id]\n      , [pl_category]\n      , [pl_status]\n      , [pl_Createdtimestamp] as [last_timestamp]\n      , [pl_Createdtimestamp] + 1     as [nextStart_timestamp]\n      , [pl_Createdtimestamp] + 86400 as [tomorrow_timestamp]\n      , convert(varchar(10),  [pl_create_date], 112) as lastdate_short\n      , convert(varchar(10),  [pl_create_date], 23) as lastdate\n      , convert(varchar(10), dateadd(day, 1, [pl_create_date]), 23) as nextdate\n  FROM [land].[pipeline_activity_log]\n  where [pl_category] = 'people' and [pl_status]  = 1 and pl_load_type = 'delta'\n  order by [pl_log_id] desc ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_src_land_sql_log",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"par_init_endpoint": {
				"type": "string",
				"defaultValue": "https://api.delighted.com/v1/"
			},
			"receiver": {
				"type": "string",
				"defaultValue": "chenerjun@gmail.com"
			},
			"cc": {
				"type": "string",
				"defaultValue": "erjun.chen@teamfuse.ca,echen@jbssa.com"
			},
			"par_p_start_date": {
				"type": "string"
			},
			"par_p_until_date": {
				"type": "string"
			},
			"par_p_API_Key": {
				"type": "string"
			}
		},
		"variables": {
			"response_body": {
				"type": "String"
			},
			"response_header": {
				"type": "String"
			},
			"var_endpoint": {
				"type": "String"
			},
			"var_start_timestamp_delta_people": {
				"type": "String"
			},
			"var_until_timestamp_delta_people": {
				"type": "String"
			},
			"var_delta_API-Key": {
				"type": "String"
			},
			"var_delta_people_API_pagination": {
				"type": "String",
				"defaultValue": "1"
			},
			"var_bridge_people": {
				"type": "String",
				"defaultValue": "0"
			}
		},
		"folder": {
			"name": "land"
		},
		"annotations": []
	}
}