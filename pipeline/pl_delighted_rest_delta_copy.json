{
	"name": "pl_delighted_rest_delta_copy",
	"properties": {
		"description": "Listing survey responses from delighted rest api",
		"activities": [
			{
				"name": "set_interval",
				"description": "",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "var_delta_load_interval_day",
					"value": {
						"value": "int ( @pipeline().parameters.par_delta_load_interval_day ) * 86400",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_1st_Day",
				"description": "set first day UNIX timestamp ",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "var_1st_day",
					"value": {
						"value": "@string(\n\tmul(\n\t\tdiv(\n\t\t\t\tsub(\n\t\t\t\t\t\tticks(convertToUtc(pipeline().parameters.par_firstday, 'Eastern Standard Time')\t \n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t,ticks(convertToUtc( '1970-01-01','Eastern Standard Time' )\n\t\t\t\t\t\t\t)  \n\t\t\t\t\t)   \n\t\t\t\t\n\t\t\t\t,864000000000\n\t\t\t)\n\t\t, 86400 \n\t )\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "lkp_last_load_date",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set_1st_Day",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_interval",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "land_src_last_success_load_delighted",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "delta_start_date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "lkp_last_load_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "var_start_delta",
					"value": {
						"value": "@string(\n\tmul(\n\t\tdiv(\n\t\t\t\tsub(\n\t\t\t\t\t\tticks(convertToUtc(\n\t\t\t\t\t\t\t\n\nactivity('lkp_last_load_date').output.firstRow.lastdate\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t, 'Eastern Standard Time')\t \n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t,ticks(convertToUtc( '1970-01-01','Eastern Standard Time' )\n\t\t\t\t\t\t\t)  \n\t\t\t\t\t)   \n\t\t\t\t\n\t\t\t\t,864000000000\n\t\t\t)\n\t\t, 86400 \n\t )\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "log_success_load_delighted",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "delta_start_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_log_last_success_load_delighted",
						"type": "DataFlowReference",
						"parameters": {
							"df_par_last_success_load_delighted_date": "toString(currentDate('EST'))"
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"par_firstday": {
				"type": "string",
				"defaultValue": "1971-1-01"
			},
			"par_delta_load_interval_day": {
				"type": "string",
				"defaultValue": "1"
			}
		},
		"variables": {
			"var_1st_day": {
				"type": "String"
			},
			"var_delta_load_interval_day": {
				"type": "String"
			},
			"var_start_delta": {
				"type": "String"
			},
			"today_ts": {
				"type": "String"
			}
		},
		"folder": {
			"name": "land"
		},
		"annotations": []
	}
}